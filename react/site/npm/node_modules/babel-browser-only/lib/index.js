'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

exports.default = function (_ref) {
  var t = _ref.types;

  return {
    visitor: {
      ImportDeclaration: function ImportDeclaration(path, state) {
        wrapPath(t, path, state, path.node.source.value);
      },
      ExpressionStatement: function ExpressionStatement(path, state) {
        var _path$node$expression = path.node.expression;
        var type = _path$node$expression.type;
        var _path$node$expression2 = _path$node$expression.callee;
        var callee = _path$node$expression2 === undefined ? {} : _path$node$expression2;
        var _path$node$expression3 = _path$node$expression.arguments;
        var args = _path$node$expression3 === undefined ? [{}] : _path$node$expression3;

        if (type === 'CallExpression' && callee.name === 'require' && args.length && args[0].value) {
          wrapPath(t, path, state, args[0].value);
        }
      }
    }
  };
};

var defaultDisregard = exports.defaultDisregard = ['.css', '.scss', '.sass', '.less'];

var wrapPath = exports.wrapPath = function wrapPath(t, path, state) {
  var src = arguments.length <= 3 || arguments[3] === undefined ? '' : arguments[3];
  var _state$opts$disregard = state.opts.disregard;
  var disregard = _state$opts$disregard === undefined ? defaultDisregard : _state$opts$disregard;

  if (src && Array.isArray(disregard) && disregard.length) {
    var splits = src.split('.');
    var extension = splits[splits.length - 1];
    if (extension && disregard.indexOf('.' + extension) !== -1) {
      // process.env.BROWSER && require('path');
      path.replaceWith(t.logicalExpression('&&', t.memberExpression(t.memberExpression(t.identifier('process'), t.identifier('env')), t.identifier('BROWSER')), t.callExpression(t.identifier('require'), [t.stringLiteral(src)])));
    }
  }
  return disregard;
};

;